import requests
import sys
import xml.etree.ElementTree as ET
from xml.etree import ElementTree
import random
import xmltodict
import json


import base64
import json


service = 'http://52.172.55.134/webconsole/api/'

loginReq = '<DM2ContentIndexing_CheckCredentialReq username="Cvadmin" password="<<password>>" />'

pwd = 'Qwerty@123'
pwd = bytes(pwd, encoding='utf8')
pwd = str(base64.b64encode(pwd), encoding='utf-8')
loginReq = loginReq.replace("<<password>>", pwd)
   
r = requests.post(service + 'Login', data=loginReq)

token = None
print (r)
if r.status_code == 200:
   root = ET.fromstring(r.text)
   if 'token' in root.attrib:
      token = root.attrib['token']
      print ("Login Successful")
      print (r.status_code)
      #print (token)
   else:
      print ("Login Failed")
      print (r.status_code)
      sys.exit(0)
else:
   print ('there was an error logging in')
   print (r.status_code)


clientlist = service + "Client"
#build headers with the received token
headers = {'Authtoken': token, 'Content-Type': 'application/xml'}
r = requests.get(clientlist, headers=headers)
#print (r.text)

#print (r.text)
root = ElementTree.fromstring(r.content)
client_details = []
for child in root.iter('clientEntity'):
    client_details.append(child.attrib['clientId'])
print (client_details)


clientId = random.sample(client_details, 2)
#print (rand_items)

backup_client = 3
client_hirarchi = service + "Client/3/Hierarchy?backedUp=True"
headers = {'Authtoken': token}
r = requests.get(client_hirarchi, headers=headers)
print (r.status_code)
print (r.text)

browse = service + "DoBrowse"

xml ="""<databrowse_BrowseRequest opType="browse">
  <entity clientName="cvclient" applicationId="33" clientId="3" subclientId="5" backupsetId="6" instanceId="1"/>
  <paths path="C:\\WindowsAzure\\CollectGuestLogsTemp"/>
  <options showDeletedFiles="1" restoreIndex="1"/>
  <mode mode="2"/>
  <queries type="1" queryId="countQuery">
    <aggrParam aggrType="4" field="0"/>
  </queries>
  <queries type="0" queryId="dataQuery">
    <dataParam>
      <paging firstNode="0" skipNode="0" pageSize="15"/>
      <sortParam ascending="1">
        <sortBy val="38"/>
        <sortBy val="0"/>
      </sortParam>
    </dataParam>
  </queries>
</databrowse_BrowseRequest>"""

r = requests.post(browse, data=xml, headers=headers)
print (r.status_code)

#print (r.text)
json = (xmltodict.parse(r.text))
print(type(json))
for i in json['databrowse_BrowseResponseList']['browseResponses'][1]['browseResult']['dataResultSet']:
    print(i['@path'],i['@size'])
