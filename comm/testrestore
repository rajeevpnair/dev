import requests
import sys
import xml.etree.ElementTree as ET
from xml.etree import ElementTree
import random
import xmltodict
import json


import base64
import json


service = 'http://52.172.44.9/webconsole/api/'

loginReq = '<DM2ContentIndexing_CheckCredentialReq username="Cvadmin" password="<<password>>" />'

pwd = 'Qwerty@123'
pwd = bytes(pwd, encoding='utf8')
pwd = str(base64.b64encode(pwd), encoding='utf-8')
loginReq = loginReq.replace("<<password>>", pwd)
   
r = requests.post(service + 'Login', data=loginReq)

token = None
print (r)
if r.status_code == 200:
   root = ET.fromstring(r.text)
   if 'token' in root.attrib:
      token = root.attrib['token']
      print ("Login Successful")
      print (r.status_code)
      #print (token)
   else:
      print ("Login Failed")
      print (r.status_code)
      sys.exit(0)
else:
   print ('there was an error logging in')
   print (r.status_code)


clientlist = service + "Client"
#build headers with the received token
headers = {'Authtoken': token, 'Content-Type': 'application/xml'}
r = requests.get(clientlist, headers=headers)
#print (r.text)

#print (r.text)
root = ElementTree.fromstring(r.content)
client_details = []
clientname = []
for child in root.iter('clientEntity'):
    client_details.append(child.attrib['clientId'])
    clientname.append(child.attrib['clientName'])
#print (client_details)
print (clientname)

randomPick = random.sample(client_details, 1)
print (randomPick)
hhh = 5
#subclient = service + "Subclient?clientId="+randomPick[0]
subclient = service + "Subclient?clientId=3"
headers = {'Authtoken': token}
r = requests.get(subclient, headers=headers)
print (r.status_code, 'subclients')
#print 
json = (xmltodict.parse(r.text))
print ("==========================================================================")
print (json)
print ("==========================================================================")

#print (json['App_GetSubClientPropertiesResponse']['subClientProperties'])
subclientId = []
subclientname = []
backupsetId = []
backupsetName = []
instanceId = []
applicationId = []
clientId = []
clientName = []
path = []
path1=[]
path2=[]

for i in json['App_GetSubClientPropertiesResponse']['subClientProperties']:
    subclientId.append(i['subClientEntity']['@subclientId'])
    subclientname.append(i['subClientEntity']['@subclientName'])
    backupsetId.append(i['subClientEntity']['@backupsetId'])
    backupsetName.append(i['subClientEntity']['@backupsetName'])
    instanceId.append(i['subClientEntity']['@instanceId'])
    applicationId.append(i['subClientEntity']['@applicationId'])
    clientId.append(i['subClientEntity']['@clientId'])
    clientName.append(i['subClientEntity']['@clientName'])
   
print (subclientId)
print (subclientname)
print (backupsetId)
print (backupsetName)
print (instanceId)
print (applicationId)
print (clientId)
print (clientName)

for i in subclientId:
    print("===============================================================================================")
    #print(i)
    subclient_BROWSE = service + "Subclient/"+i+"/Browse?path=%5C"
    headers = {'Authtoken': token}
    r = requests.get(subclient_BROWSE, headers=headers)
    #print (r.status_code, 'browse')
    print (r.text)
    json = (xmltodict.parse(r.text))
    if 'messages' in r.text:
            continue
    else:
   # path1 = []
    #print (json['databrowse_BrowseResponseList']['browseResponses']['session'])
        for i in json['databrowse_BrowseResponseList']['browseResponses'][0]['browseResult']['dataResultSet']:
            for z in i:
                if z=='@path':
                     print("haii",i['@path'])
                     path1.append(i['@path'])
    path22=random.choice(path1)
    path.append(path22)
print(path)
